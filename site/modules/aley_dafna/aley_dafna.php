<?php

/**
 * Aley Dafna - Support Module
 *
 * This module provides some basic customizations for Aley Dafna flower shop site. Aside
 * from customizations it also provides options for importing shop items to system from CSV
 * sources generated by the Google Documents.
 *
 * Author: Mladen Mijatov
 */
use Core\Module;


class aley_dafna extends Module {
	private static $_instance;

	/**
	 * Constructor
	 */
	protected function __construct() {
		global $section;

		parent::__construct(__FILE__);

		// register backend
		if (class_exists('backend') && class_exists('shop')) {
			$backend = backend::getInstance();
			$import_menu = $backend->getMenu('shop_import');

			$import_menu->addChild(null, new backend_MenuItem(
				$this->getLanguageConstant('menu_import_items'),
				url_GetFromFilePath($this->path.'images/import.svg'),
				window_Open( // on click open window
					'shop_import_items',
					350,
					$this->getLanguageConstant('title_import_items'),
					true, true,
					backend_UrlMake($this->name, 'import')
				),
				5  // level
			));
		}
	}

	/**
	 * Public function that creates a single instance
	 */
	public static function getInstance() {
		if (!isset(self::$_instance))
			self::$_instance = new self();

		return self::$_instance;
	}

	/**
	 * Transfers control to module functions
	 *
	 * @param array $params
	 * @param array $children
	 */
	public function transferControl($params = array(), $children = array()) {
		// global control actions
		if (isset($params['action']))
			switch ($params['action']) {
				default:
					break;
			}

		// global control actions
		if (isset($params['backend_action']))
			switch ($params['backend_action']) {
				case 'import':
					$this->show_import();
					break;

				case 'import_from_file':
					$this->import_from_file();
					break;

				default:
					break;
			}
	}

	/**
	 * Event triggered upon module initialization
	 */
	public function onInit() {
	}

	/**
	 * Event triggered upon module deinitialization
	 */
	public function onDisable() {
	}

	/**
	 * Show form for selecting file for import.
	 */
	private function show_import() {
		$template = new TemplateHandler('import.xml', $this->path.'templates/');
		$template->setMappedModule($this->name);

		$params = array(
					'form_action'	=> backend_UrlMake($this->name, 'import_from_file'),
					'cancel_action'	=> window_Close('shop_import_items')
				);

		$template->restoreXML();
		$template->setLocalParams($params);
		$template->parse();
	}

	/**
	 * Import items from uploaded file.
	 */
	private function import_from_file() {
	}
}

?>
